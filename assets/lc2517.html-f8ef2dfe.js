import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as l,b as n,d as s,e as c,a}from"./app-74f7055a.js";const i={},r=a('<h1 id="_2517-礼盒的最大甜蜜度" tabindex="-1"><a class="header-anchor" href="#_2517-礼盒的最大甜蜜度" aria-hidden="true">#</a> 2517. 礼盒的最大甜蜜度</h1><h2 id="score-2020" tabindex="-1"><a class="header-anchor" href="#score-2020" aria-hidden="true">#</a> score: 2020</h2><h3 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h3>',3),u=a("<li>给你一个正整数数组 <code>price</code> ，其中 <code>price[i]</code> 表示第 <code>i</code> 类糖果的价格，另给你一个正整数 <code>k</code> 。商店组合 <code>k</code> 类 不同 糖果打包成礼盒出售。礼盒的 甜蜜度 是礼盒中任意两种糖果 <code>价格</code> 绝对差的最小值。返回礼盒的 <code>最大</code> 甜蜜度。</li>",1),m={href:"https://leetcode.cn/problems/maximum-tastiness-of-candy-basket/",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"示例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#示例","aria-hidden":"true"},"#"),s(" 示例")],-1),k=n("pre",null,[n("code",null,`输入：price = [13,5,1,8,21,2], k = 3
输出：8
解释：选出价格分别为 [13,5,21] 的三类糖果。
礼盒的甜蜜度为 min(|13 - 5|, |13 - 21|, |5 - 21|) = min(8, 8, 16) = 8 。
可以证明能够取得的最大甜蜜度就是 8 。
`)],-1),h=n("h3",{id:"解析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#解析","aria-hidden":"true"},"#"),s(" 解析")],-1),v=n("ul",null,[n("li",null,"此题的思路是先假定结果为一个值，然后去验证这个值在数组中是否成立。"),n("li",null,[s("标准"),n("code",null,"lc"),s("描述题目不清晰，刨析本质，此题考查的内容为数组"),n("code",null,"price"),s("中是否存在一个长度为"),n("code",null,"k"),s("的子数组，数组中各个整数的差值的"),n("code",null,"最小值"),s("在所有的子数组中最大")]),n("li",null,[s("首先子数组的查找需要先对"),n("code",null,"price"),s("数组排序，对排序后的数组进行子数组的查找")]),n("li",null,[s("二分查找的作用区间为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"["),n("mn",null,"0"),n("mo",{separator:"true"},","),n("mi",null,"p"),n("mi",null,"r"),n("mi",null,"i"),n("mi",null,"c"),n("mi",null,"e"),n("mo",{stretchy:"false"},"["),n("mi",null,"l"),n("mi",null,"e"),n("mi",null,"n"),n("mo",null,"−"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"−"),n("mi",null,"p"),n("mi",null,"r"),n("mi",null,"i"),n("mi",null,"c"),n("mi",null,"e"),n("mo",{stretchy:"false"},"["),n("mn",null,"0"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"[0, price[len - 1] - price[0]]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"0"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mord mathnormal"},"ce"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mord mathnormal"},"ce"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"0"),n("span",{class:"mclose"},"]]")])])]),n("ul",null,[n("li",null,"补充，二分查找不只是可以在数组中查找对应值，还可以查找最后的结果，此题就是需要在取值区间内二分搜索最后结果")])])],-1),b=a(`<h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maximumTastiness</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> price<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> price<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> maxNum <span class="token operator">=</span> price<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> price<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> minNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// 二分查找最后的值</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>minNum <span class="token operator">&lt;=</span> maxNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>maxNum <span class="token operator">-</span> minNum<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> minNum<span class="token punctuation">;</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> price<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>price<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> temp <span class="token operator">&gt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    count<span class="token operator">++</span><span class="token punctuation">;</span>
                    temp <span class="token operator">=</span> price<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&gt;=</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
                minNum <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                maxNum <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(g,_){const e=p("ExternalLinkIcon");return o(),l("div",null,[r,n("ul",null,[u,n("li",null,[n("a",m,[s("https://leetcode.cn/problems/maximum-tastiness-of-candy-basket/"),c(e)])])]),d,k,h,v,b])}const w=t(i,[["render",y],["__file","lc2517.html.vue"]]);export{w as default};
