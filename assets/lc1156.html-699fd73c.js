import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-783e49d0.js";const p={},e=t(`<h1 id="_1156-单字符重复子串的最大长度" tabindex="-1"><a class="header-anchor" href="#_1156-单字符重复子串的最大长度" aria-hidden="true">#</a> 1156. 单字符重复子串的最大长度</h1><h2 id="score-1787" tabindex="-1"><a class="header-anchor" href="#score-1787" aria-hidden="true">#</a> score: 1787</h2><h3 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h3><ul><li>如果字符串中的所有字符都相同，那么这个字符串是单字符重复的字符串。</li><li>给你一个字符串 <code>text</code>，你只能交换其中两个字符一次或者什么都不做，然后得到一些单字符重复的子串。返回其中最长的子串的长度。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：text = &quot;ababa&quot;
输出：3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：text = &quot;aaabaaa&quot;
输出：6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解析" tabindex="-1"><a class="header-anchor" href="#解析" aria-hidden="true">#</a> 解析</h3><ul><li>首先这是一个滑动窗口问题，但是窗口的确立是在执行过程中确定的，并不是一个固定的窗口长度</li><li>首先记录字符串中每个字母出现的次数，为窗口中的字符串替换给出是否可以替换的依据</li><li>字符串分为三种情况 <ol><li><strong>....aaaaaaa.....a...</strong>，这种情况下把 <strong>a</strong> 放置到前面的字符串中使长度 <strong>+1</strong>(前提是子字符串的前后有位置田间)。</li><li><strong>....aaabaaa.....a...</strong>，这种情况下把 <strong>a</strong> 放置到前面的字符串中使其长度变为 <strong>current + 1</strong></li><li><strong>....aaabaaa.........</strong>，这种情况下把 <strong>a</strong> 和 <strong>b</strong> 做一个交换使其长度变为 <strong>current</strong></li></ol></li></ul><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxRepOpt1</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chs <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chs<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token punctuation">[</span>chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chs<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// 寻找窗口</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;</span> chs<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> chs<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token operator">++</span>j<span class="token punctuation">;</span>
            <span class="token comment">// 得到窗口长度</span>
            <span class="token keyword">int</span> currentCount <span class="token operator">=</span> j <span class="token operator">-</span> i<span class="token punctuation">;</span>
            <span class="token comment">// 判断是否满足第一种，记录当前长度 </span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>currentCount <span class="token operator">&lt;</span> count<span class="token punctuation">[</span>chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> chs<span class="token punctuation">.</span>length <span class="token operator">||</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> currentCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 判断是否存在第2，3种情况</span>
            <span class="token keyword">int</span> k <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>k <span class="token operator">&lt;</span> chs<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> chs<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">==</span> chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                k<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token comment">// 记录当前长度</span>
            currentCount <span class="token operator">=</span> k <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment">// 判断符合哪一种情况</span>
            res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> currentCount <span class="token operator">+</span> <span class="token punctuation">(</span>currentCount <span class="token operator">&lt;</span> count<span class="token punctuation">[</span>chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 跳转保证时间复杂度为O(n)</span>
            i <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","lc1156.html.vue"]]);export{k as default};
