const e=JSON.parse('{"key":"v-66110ce2","path":"/lc208.html","title":"208. 实现 Trie (前缀树)","lang":"en-US","frontmatter":{"tag":"前缀树"},"headers":[{"level":2,"title":"分析","slug":"分析","link":"#分析","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1686050296000,"updatedTime":1686050296000,"contributors":[{"name":"wildpants","email":"492843674@qq.com","commits":1}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"lc208.md","localizedDate":"June 6, 2023","excerpt":"<h1> 208. 实现 Trie (前缀树)</h1>\\n<p><a href=\\"https://leetcode.cn/problems/implement-trie-prefix-tree/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/implement-trie-prefix-tree/</a></p>\\n<p>Trie（发音类似 \\"try\\"）或者说 前缀树 是一种树形数据结构，用于高效地存储和检索字符串数据集中的键。这一数据结构有相当多的应用情景，例如自动补完和拼写检查。</p>\\n<p>请你实现 <code>Trie</code> 类：</p>"}');export{e as data};
